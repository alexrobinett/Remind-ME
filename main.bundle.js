(()=>{"use strict";let e=[];window.inbox=e;const t=(n,o,d,c,i,s)=>({name:n,description:o,dueDate:d,priority:c,project:i,isComplete:s,createReminder:t,toggleCompleted:function(){1==this.isComplete?(this.isComplete=!1,console.log("toggled false")):0==this.isComplete?(this.isComplete=!0,console.log("toggled true")):console.log("error soemthing went wrong")},addToProject:function(){e.push(this)}}),n=t("feed keni","give keni dog food","11/12/23","high","inbox",!1);window.testReminder1=n;const o=document.querySelector(".add-reminder"),d=document.querySelector(".modal"),c=document.querySelector(".modal-update"),i=document.querySelectorAll(".close-button"),s=document.querySelectorAll(".delete-btn"),l=document.querySelectorAll(".edit-btn"),r=document.querySelector("#create-reminder");o.addEventListener("click",(function(e){d.classList.toggle("hidden")})),i.forEach((function(e){e.addEventListener("click",(function(){!function(e){e.parentElement.parentElement.parentElement.parentElement.parentElement.classList.toggle("hidden")}(e)}))})),r.addEventListener("click",(e=>{hideDivHistorias(),showDivPagina2()})),s.forEach((function(e){e.addEventListener("click",(function(){var t;((t=e).classList="delete-btn")?t.parentNode.parentNode.remove():(t.parentNode.classList="project")?t.parentNode.remove():console.log("error")}))})),l.forEach((function(e){e.addEventListener("click",(function(){c.classList.toggle("hidden")}))})),window.displayReminders=function(e,t,n,o,d){document.querySelector(".reminder-container");const c=document.querySelector("reminder-container-completed"),i=document.createElement("div");i.classList.add("reminder");const s=document.createElement("div");s.classList.add("circle"),s.classList.add(`${o}`);const l=document.createElement("span");l.classList.add("task"),l.textContent=`${e}`;const r=document.createElement("span");r.classList.add("description"),r.textContent=`${t}`;const a=document.createElement("div");a.classList.add("right-side");const m=document.createElement("span");m.classList.add("due-date"),m.textContent=`${n}`;const u=document.createElement("img");u.classList.add("edit-btn"),u.src="/src/icons/text-box-edit.svg",u.alt="edit";const p=document.createElement("img");p.classList.add("delete-btn"),p.src="/src/icons/trash-can-outline.svg",p.alt="trash",a.appendChild(m),a.appendChild(u),a.appendChild(p),i.appendChild(s),i.appendChild(l),i.appendChild(r),i.appendChild(a),c.appendChild(i)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,