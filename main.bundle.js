(()=>{"use strict";function e(e,t,n,d,s,c){if(!0===s){const d=document.querySelector(".reminder-container-completed"),s=document.createElement("div");s.classList.add("reminder"),s.classList.add("completed");const i=document.createElement("div");i.classList.add("circle"),i.classList.add("completed");const a=document.createElement("span");a.classList.add("task"),a.classList.add("completed"),a.textContent=`${e}`;const o=document.createElement("span");o.classList.add("description"),o.classList.add("completed"),o.textContent=`${t}`;const r=document.createElement("div");r.classList.add("right-side");const l=document.createElement("span");l.classList.add("due-date"),l.classList.add("completed"),l.textContent=`${n}`;const m=document.createElement("img");m.classList.add("edit"),m.classList.add("completed-icon"),m.src="/src/icons/text-box-edit.svg",m.alt="edit";const u=document.createElement("img");u.classList.add("delete"),u.classList.add("completed-icon"),u.src="/src/icons/trash-can-outline.svg",u.alt="trash",u.setAttribute("data-task",c),r.appendChild(l),r.appendChild(m),r.appendChild(u),s.appendChild(i),s.appendChild(a),s.appendChild(o),s.appendChild(r),d.appendChild(s)}else if(!1===s){const s=document.querySelector(".reminder-container"),i=document.createElement("div");i.classList.add("reminder");const a=document.createElement("div");a.classList.add("circle"),a.classList.add(`${d}`),a.setAttribute("data-task",c);const o=document.createElement("span");o.classList.add("task"),o.textContent=`${e}`;const r=document.createElement("span");r.classList.add("description"),r.textContent=`${t}`;const l=document.createElement("div");l.classList.add("right-side");const m=document.createElement("span");m.classList.add("due-date"),m.textContent=`${n}`;const u=document.createElement("img");u.classList.add("edit-btn"),u.src="/src/icons/text-box-edit.svg",u.alt="edit";const p=document.createElement("img");p.classList.add("delete-btn"),p.src="/src/icons/trash-can-outline.svg",p.alt="trash",p.setAttribute("data-task",c),l.appendChild(m),l.appendChild(u),l.appendChild(p),i.appendChild(a),i.appendChild(o),i.appendChild(r),i.appendChild(l),s.appendChild(i)}}function t(){for(let t=0;t<s[0].task.length;t++)e(s[0].task[t].reminderTitle,s[0].task[t].reminderDescription,s[0].task[t].reminderDueDate,s[0].task[t].reminderPriority,s[0].task[t].isComplete)}const n=(e=!1,t)=>{let d=document.getElementById("reminder-title").value,s=document.getElementById("reminder-description").value,c=document.getElementById("reminder-priority").value,i=document.getElementById("reminder-due-date").value;return Date.now(),{reminderTitle:d,reminderDescription:s,reminderDueDate:i,reminderPriority:c,isComplete:e,createReminder:n,toggleCompleted:function(){1==this.isComplete?(this.isComplete=!1,console.log("toggled false")):0==this.isComplete?(this.isComplete=!0,console.log("toggled true")):console.log("error something went wrong")}}},d=e=>({addTask:function(){this.task.push(n())},createProject:d,projectName:e,task:[]});let s=[];window.projectsContainer=s,s.push(d("inbox")),s[0].addTask(),s[0].task[0].isComplete,s[0].task[0].reminderDescription="test description",s[0].task[0].reminderTitle="Test Reminder",s[0].task[0].reminderDueDate="12-22-23",s[0].task[0].reminderPriority="high",t(),t(),function e(){const n=document.querySelector(".add-reminder"),c=document.querySelector(".modal"),i=document.querySelector(".modal-update"),a=document.querySelectorAll(".close-button"),o=document.querySelectorAll(".edit-btn"),r=document.querySelector("#create-reminder"),l=document.querySelector("#add-project"),m=(document.querySelectorAll(".circle"),document.querySelectorAll(".delete-btn"));n.addEventListener("click",(function(e){c.classList.remove("hidden")})),a.forEach((function(e){e.addEventListener("click",(function(){!function(e){e.parentElement.parentElement.parentElement.parentElement.parentElement.classList.add("hidden")}(e)}))})),r.addEventListener("click",((n,d=s[0])=>{d.addTask(),function(){const e=document.querySelector(".reminder-container");document.querySelector(".reminder-container-completed").innerHTML="",e.innerHTML=""}(),t(),c.classList.add("hidden"),e(),console.log("button clicked")})),l.addEventListener("click",(e=>{window.projectsContainer=d(document.querySelector("#project-name").value),console.log("button clicked")})),m.forEach((function(e,t){e.setAttribute("data-task",t),e.addEventListener("click",(function(){var t;"delete-btn"==(t=e).classList?t.parentNode.parentNode.remove():"project"==t.parentNode.classList?t.parentNode.remove():console.log("error");let n=e.getAttribute("data-task");s[0].task.splice(n,1)}))})),o.forEach((function(e){e.addEventListener("click",(function(){i.classList.toggle("hidden")}))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,