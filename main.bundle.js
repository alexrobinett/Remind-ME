(()=>{"use strict";function e(e,t,n,d,c,s){if(!0===c){const d=document.querySelector(".reminder-container-completed"),c=document.createElement("div");c.classList.add("reminder"),c.classList.add("completed");const o=document.createElement("div");o.classList.add("circle"),o.classList.add("completed");const i=document.createElement("span");i.classList.add("task"),i.classList.add("completed"),i.textContent=`${e}`;const a=document.createElement("span");a.classList.add("description"),a.classList.add("completed"),a.textContent=`${t}`;const r=document.createElement("div");r.classList.add("right-side");const l=document.createElement("span");l.classList.add("due-date"),l.classList.add("completed"),l.textContent=`${n}`;const m=document.createElement("img");m.classList.add("edit"),m.classList.add("completed-icon"),m.src="/src/icons/text-box-edit.svg",m.alt="edit";const u=document.createElement("img");u.classList.add("delete"),u.classList.add("completed-icon"),u.src="/src/icons/trash-can-outline.svg",u.alt="trash",u.setAttribute("data-task",s),r.appendChild(l),r.appendChild(m),r.appendChild(u),c.appendChild(o),c.appendChild(i),c.appendChild(a),c.appendChild(r),d.appendChild(c)}else if(!1===c){const c=document.querySelector(".reminder-container"),o=document.createElement("div");o.classList.add("reminder");const i=document.createElement("div");i.classList.add("circle"),i.classList.add(`${d}`),i.setAttribute("data-task",s);const a=document.createElement("span");a.classList.add("task"),a.textContent=`${e}`;const r=document.createElement("span");r.classList.add("description"),r.textContent=`${t}`;const l=document.createElement("div");l.classList.add("right-side");const m=document.createElement("span");m.classList.add("due-date"),m.textContent=`${n}`;const u=document.createElement("img");u.classList.add("edit-btn"),u.src="/src/icons/text-box-edit.svg",u.alt="edit";const p=document.createElement("img");p.classList.add("delete-btn"),p.src="/src/icons/trash-can-outline.svg",p.alt="trash",p.setAttribute("data-task",s),l.appendChild(m),l.appendChild(u),l.appendChild(p),o.appendChild(i),o.appendChild(a),o.appendChild(r),o.appendChild(l),c.appendChild(o)}}function t(e,t){const n=document.querySelector(".project-list-ul"),d=document.createElement("li");d.classList.add("nav-item"),d.classList.add("project"),d.setAttribute("data-project",t);const c=document.createElement("img");c.src="/src/icons/format-list-bulleted.svg";const s=document.createElement("span");s.textContent=`${e}`,d.appendChild(c),d.appendChild(s),n.appendChild(d)}function n(e=0){document.querySelector(".project-title-holder").textContent=`${m[e].projectName}`}function d(){document.querySelector(".project-list-ul").innerHTML=""}function c(){const e=document.querySelector(".reminder-container");document.querySelector(".reminder-container-completed").innerHTML="",e.innerHTML=""}function s(){for(let e=0;e<m.length;e++)t(m[e].projectName,m[e].projectId)}function o(t=0){for(let n=0;n<m[t].task.length;n++)e(m[t].task[n].reminderTitle,m[t].task[n].reminderDescription,m[t].task[n].reminderDueDate,m[t].task[n].reminderPriority,m[t].task[n].isComplete,m[t].task[n].reminderId)}const i=(e=!1)=>{let t=document.getElementById("reminder-title").value,n=document.getElementById("reminder-description").value,d=document.getElementById("reminder-priority").value;return{reminderTitle:t,reminderDescription:n,reminderDueDate:document.getElementById("reminder-due-date").value,reminderPriority:d,isComplete:e,toggleCompleted:function(){this.isComplete=!this.isComplete,console.log("isComplete set to",this.isComplete)},reminderId:Date.now()}},a=e=>({addTask:function(){this.task.push(i())},projectName:e,task:[],projectId:Date.now()});function r(e){localStorage.setItem("list-of-projects",JSON.stringify(e)),console.log(JSON.stringify(e))}function l(){let e=[];return e=JSON.parse(localStorage.getItem("list-of-projects")),e}let m=[];null===l()?(m.push(a("Inbox")),m[0].addTask(),m[0].task[0].isComplete,m[0].task[0].reminderDescription="test description",m[0].task[0].reminderTitle="Test Reminder",m[0].task[0].reminderDueDate="12-22-23",m[0].task[0].reminderPriority="high",o(),n(),s()):"object"==typeof l()&&(m=l(),console.log(m[0]),o(),n(),s());const u=document.querySelector(".add-reminder"),p=document.querySelector(".modal"),h=document.querySelector(".modal-update"),L=document.querySelectorAll(".close-button"),g=document.querySelector("#create-reminder"),f=document.querySelector("#add-project");let E=0;function k(){const e=document.querySelectorAll(".delete-btn"),t=document.querySelectorAll(".edit-btn"),i=document.querySelectorAll(".circle"),a=document.querySelectorAll(".nav-item");e.forEach((function(e,t){e.setAttribute("data-task",t),e.addEventListener("click",(function(){var t;"delete-btn"==(t=e).classList?t.parentNode.parentNode.remove():"project"==t.parentNode.classList?t.parentNode.remove():console.log("error");let n=e.getAttribute("data-task");m[E].task.splice(n,1),r(m)}))})),t.forEach((function(e){e.addEventListener("click",(function(){h.classList.toggle("hidden")}))})),i.forEach((function(e,t){e.setAttribute("data-task",t),e.addEventListener("click",(function(){let t=e.getAttribute("data-task");console.log(E);let n=m[E].task[t];n&&n.toggleCompleted&&n.toggleCompleted.call(n),c(),o(E),k(),r(m)}))})),a.forEach((function(e,t){e.setAttribute("data-project",t),e.addEventListener("click",(function(){let t=e.getAttribute("data-project");m[t].projectName,function(e,t){d(),s(),n(t)}(0,t),function(e){c(),o(e)}(t),E=t,k()}))}))}u.addEventListener("click",(function(e){p.classList.remove("hidden")})),L.forEach((function(e){e.addEventListener("click",(function(){!function(e){e.parentElement.parentElement.parentElement.parentElement.parentElement.classList.add("hidden")}(e)}))})),g.addEventListener("click",((e,t=m[E])=>{c(),t.addTask(),o(E),p.classList.add("hidden"),k(),r(m)})),f.addEventListener("click",(e=>{m.push(a(document.querySelector("#project-name").value)),d(),console.log(E),s(),k(),r(m),console.log("button clicked")})),k()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,