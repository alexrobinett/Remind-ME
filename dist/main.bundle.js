(()=>{"use strict";const e=(t=!1)=>{let n=document.getElementById("reminder-title").value,d=document.getElementById("reminder-description").value,s=document.getElementById("reminder-priority").value;return{reminderTitle:n,reminderDescription:d,reminderDueDate:document.getElementById("reminder-due-date").value,reminderPriority:s,isComplete:t,createReminder:e,toggleCompleted:function(){1==this.isComplete?(this.isComplete=!1,console.log("toggled false")):0==this.isComplete?(this.isComplete=!0,console.log("toggled true")):console.log("error something went wrong")}}},t=n=>({addTask:function(){this.task.push(e())},Project:t,projectName:n,task:[]}),n=t("inbox");function d(e,t,n,d,s){if(!0===s){const d=document.querySelector(".reminder-container-completed"),s=document.createElement("div");s.classList.add("reminder"),s.classList.add("completed");const c=document.createElement("div");c.classList.add("circle"),c.classList.add("completed");const i=document.createElement("span");i.classList.add("task"),i.classList.add("completed"),i.textContent=`${e}`;const o=document.createElement("span");o.classList.add("description"),o.classList.add("completed"),o.textContent=`${t}`;const a=document.createElement("div");a.classList.add("right-side");const l=document.createElement("span");l.classList.add("due-date"),l.classList.add("completed"),l.textContent=`${n}`;const r=document.createElement("img");r.classList.add("edit"),r.classList.add("completed-icon"),r.src="/src/icons/text-box-edit.svg",r.alt="edit";const m=document.createElement("img");m.classList.add("delete"),m.classList.add("completed-icon"),m.src="/src/icons/trash-can-outline.svg",m.alt="trash",a.appendChild(l),a.appendChild(r),a.appendChild(m),s.appendChild(c),s.appendChild(i),s.appendChild(o),s.appendChild(a),d.appendChild(s)}else if(!1===s){const s=document.querySelector(".reminder-container"),c=document.createElement("div");c.classList.add("reminder");const i=document.createElement("div");i.classList.add("circle"),i.classList.add(`${d}`);const o=document.createElement("span");o.classList.add("task"),o.textContent=`${e}`;const a=document.createElement("span");a.classList.add("description"),a.textContent=`${t}`;const l=document.createElement("div");l.classList.add("right-side");const r=document.createElement("span");r.classList.add("due-date"),r.textContent=`${n}`;const m=document.createElement("img");m.classList.add("edit-btn"),m.src="/src/icons/text-box-edit.svg",m.alt="edit";const p=document.createElement("img");p.classList.add("delete-btn"),p.src="/src/icons/trash-can-outline.svg",p.alt="trash",l.appendChild(r),l.appendChild(m),l.appendChild(p),c.appendChild(i),c.appendChild(o),c.appendChild(a),c.appendChild(l),s.appendChild(c)}}function s(){for(let e=0;e<n.task.length;e++)d(n.task[e].reminderTitle,n.task[e].reminderDescription,n.task[e].reminderDueDate,n.task[e].reminderPriority,n.task[e].isComplete)}window.inbox=n,n.addTask(),n.addTask(),n.addTask(),n.task[0].isComplete=!0,s(),function e(){const t=document.querySelector(".add-reminder"),d=document.querySelector(".modal"),c=document.querySelector(".modal-update"),i=document.querySelectorAll(".close-button"),o=document.querySelectorAll(".edit-btn"),a=document.querySelector("#create-reminder"),l=document.querySelectorAll(".delete-btn");t.addEventListener("click",(function(e){d.classList.toggle("hidden")})),i.forEach((function(e){e.addEventListener("click",(function(){!function(e){e.parentElement.parentElement.parentElement.parentElement.parentElement.classList.toggle("hidden")}(e)}))})),a.addEventListener("click",(t=>{n.addTask(),function(){const e=document.querySelector(".reminder-container");document.querySelector(".reminder-container-completed").innerHTML="",e.innerHTML=""}(),s(),d.classList.toggle("hidden"),e(),console.log("button clicked")})),l.forEach((function(e){e.addEventListener("click",(function(){var t;"delete-btn"==(t=e).classList?t.parentNode.parentNode.remove():"project"==t.parentNode.classList?t.parentNode.remove():console.log("error"),n.task.splice(0,1)}))})),o.forEach((function(e){e.addEventListener("click",(function(){c.classList.toggle("hidden")}))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,