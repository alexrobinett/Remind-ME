(()=>{"use strict";var e={};(e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})})(e);const t=document.querySelector(".add-reminder"),n=document.querySelector(".modal"),d=document.querySelector(".modal-update"),c=document.querySelectorAll(".close-button"),s=document.querySelectorAll(".delete-btn"),o=document.querySelectorAll(".edit-btn"),i=document.querySelector("#create-reminder");t.addEventListener("click",(function(e){n.classList.toggle("hidden")})),c.forEach((function(e){e.addEventListener("click",(function(){!function(e){e.parentElement.parentElement.parentElement.parentElement.parentElement.classList.toggle("hidden")}(e)}))})),i.addEventListener("click",(e=>{hideDivHistorias(),showDivPagina2()})),s.forEach((function(e){e.addEventListener("click",(function(){var t;((t=e).classList="delete-btn")?t.parentNode.parentNode.remove():(t.parentNode.classList="project")?t.parentNode.remove():console.log("error")}))})),o.forEach((function(e){e.addEventListener("click",(function(){d.classList.toggle("hidden")}))}));const l=(e,t,n,d,c,s)=>({name:e,description:t,dueDate:n,priority:d,project:c,isComplete:s,createReminder:l,toggleCompleted:function(){1==this.isComplete?(this.isComplete=!1,console.log("toggled false")):0==this.isComplete?(this.isComplete=!0,console.log("toggled true")):console.log("error soemthing went wrong")},addToProject:function(e){e.push(this)}});window.displayReminders=function(e,t,n,d,c){if(!0===c){const d=document.querySelector(".reminder-container-completed"),c=document.createElement("div");c.classList.add("reminder"),c.classList.add("completed");const s=document.createElement("div");s.classList.add("circle"),s.classList.add("completed");const o=document.createElement("span");o.classList.add("task"),o.classList.add("completed"),o.textContent=`${e}`;const i=document.createElement("span");i.classList.add("description"),i.classList.add("completed"),i.textContent=`${t}`;const l=document.createElement("div");l.classList.add("right-side");const a=document.createElement("span");a.classList.add("due-date"),a.classList.add("completed"),a.textContent=`${n}`;const r=document.createElement("img");r.classList.add("edit"),r.classList.add("completed-icon"),r.src="/src/icons/text-box-edit.svg",r.alt="edit";const m=document.createElement("img");m.classList.add("delete"),m.classList.add("completed-icon"),m.src="/src/icons/trash-can-outline.svg",m.alt="trash",l.appendChild(a),l.appendChild(r),l.appendChild(m),c.appendChild(s),c.appendChild(o),c.appendChild(i),c.appendChild(l),d.appendChild(c)}else if(!1===c){const c=document.querySelector(".reminder-container"),s=document.createElement("div");s.classList.add("reminder");const o=document.createElement("div");o.classList.add("circle"),o.classList.add(`${d}`);const i=document.createElement("span");i.classList.add("task"),i.textContent=`${e}`;const l=document.createElement("span");l.classList.add("description"),l.textContent=`${t}`;const a=document.createElement("div");a.classList.add("right-side");const r=document.createElement("span");r.classList.add("due-date"),r.textContent=`${n}`;const m=document.createElement("img");m.classList.add("edit-btn"),m.src="/src/icons/text-box-edit.svg",m.alt="edit";const p=document.createElement("img");p.classList.add("delete-btn"),p.src="/src/icons/trash-can-outline.svg",p.alt="trash",a.appendChild(r),a.appendChild(m),a.appendChild(p),s.appendChild(o),s.appendChild(i),s.appendChild(l),s.appendChild(a),c.appendChild(s)}};let a=l("feed keni","give keni dog food","11/12/23","high","inbox",!1);window.testReminder1=a,window.inbox=[],window.displayProjectTitle=function(e){document.querySelector(".project-title-holder").textContent=`${e}`},window.displayProjectList=function(e){const t=document.querySelector(".project-list-ul"),n=document.createElement("li");n.classList.add("nav-item"),n.classList.add("project");const d=document.createElement("img");d.src="/src/icons/format-list-bulleted.svg";const c=document.createElement("span");c.textContent=`${e}`,n.appendChild(d),n.appendChild(c),t.appendChild(n)},(0,e.default)()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,