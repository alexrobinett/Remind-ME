(()=>{"use strict";var e={d:(t,n)=>{for(var d in n)e.o(n,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:n[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(e,t,n,d,c,s){if(!0===c){const d=document.querySelector(".reminder-container-completed"),c=document.createElement("div");c.classList.add("reminder"),c.classList.add("completed");const i=document.createElement("div");i.classList.add("circle"),i.classList.add("completed");const a=document.createElement("span");a.classList.add("task"),a.classList.add("completed"),a.textContent=`${e}`;const o=document.createElement("span");o.classList.add("description"),o.classList.add("completed"),o.textContent=`${t}`;const r=document.createElement("div");r.classList.add("right-side");const l=document.createElement("span");l.classList.add("due-date"),l.classList.add("completed"),l.textContent=`${n}`;const m=document.createElement("img");m.classList.add("edit"),m.classList.add("completed-icon"),m.src="/src/icons/text-box-edit.svg",m.alt="edit";const u=document.createElement("img");u.classList.add("delete"),u.classList.add("completed-icon"),u.src="/src/icons/trash-can-outline.svg",u.alt="trash",u.setAttribute("data-task",s),r.appendChild(l),r.appendChild(m),r.appendChild(u),c.appendChild(i),c.appendChild(a),c.appendChild(o),c.appendChild(r),d.appendChild(c)}else if(!1===c){const c=document.querySelector(".reminder-container"),i=document.createElement("div");i.classList.add("reminder");const a=document.createElement("div");a.classList.add("circle"),a.classList.add(`${d}`),a.setAttribute("data-task",s);const o=document.createElement("span");o.classList.add("task"),o.textContent=`${e}`;const r=document.createElement("span");r.classList.add("description"),r.textContent=`${t}`;const l=document.createElement("div");l.classList.add("right-side");const m=document.createElement("span");m.classList.add("due-date"),m.textContent=`${n}`;const u=document.createElement("img");u.classList.add("edit-btn"),u.src="/src/icons/text-box-edit.svg",u.alt="edit";const p=document.createElement("img");p.classList.add("delete-btn"),p.src="/src/icons/trash-can-outline.svg",p.alt="trash",p.setAttribute("data-task",s),l.appendChild(m),l.appendChild(u),l.appendChild(p),i.appendChild(a),i.appendChild(o),i.appendChild(r),i.appendChild(l),c.appendChild(i)}}function n(e,t){const n=document.querySelector(".project-list-ul"),d=document.createElement("li");d.classList.add("nav-item"),d.classList.add("project"),d.setAttribute("data-project",t);const c=document.createElement("img");c.src="/src/icons/format-list-bulleted.svg";const s=document.createElement("span");s.textContent=`${e}`,d.appendChild(c),d.appendChild(s),n.appendChild(d)}function d(e=0){document.querySelector(".project-title-holder").textContent=`${l[e].projectName}`}function c(){document.querySelector(".project-list-ul").innerHTML=""}function s(){const e=document.querySelector(".reminder-container");document.querySelector(".reminder-container-completed").innerHTML="",e.innerHTML=""}function i(){for(let e=0;e<l.length;e++)n(l[e].projectName,l[e].projectId)}function a(e=0){for(let n=0;n<l[e].task.length;n++)t(l[e].task[n].reminderTitle,l[e].task[n].reminderDescription,l[e].task[n].reminderDueDate,l[e].task[n].reminderPriority,l[e].task[n].isComplete,l[e].task[n].reminderId)}e.d({},{F:()=>C}),window.displayProjectTitle=d;const o=(e=!1,t)=>{let n=document.getElementById("reminder-title").value,d=document.getElementById("reminder-description").value,c=document.getElementById("reminder-priority").value;return{reminderTitle:n,reminderDescription:d,reminderDueDate:document.getElementById("reminder-due-date").value,reminderPriority:c,isComplete:e,toggleCompleted:function(){this.isComplete=!this.isComplete,console.log("isComplete set to",this.isComplete)},reminderId:Date.now()}},r=e=>({addTask:function(){this.task.push(o())},projectName:e,task:[],projectId:Date.now()});let l=[];window.projectsContainer=l,l.push(r("inbox")),l[0].addTask(),l[0].task[0].isComplete,l[0].task[0].reminderDescription="test description",l[0].task[0].reminderTitle="Test Reminder",l[0].task[0].reminderDueDate="12-22-23",l[0].task[0].reminderPriority="high",a(),d(),i();const m=document.querySelector(".add-reminder"),u=document.querySelector(".modal"),p=document.querySelector(".modal-update"),h=document.querySelectorAll(".close-button"),L=document.querySelector("#create-reminder"),E=document.querySelector("#add-project");function k(){const e=document.querySelectorAll(".delete-btn"),t=document.querySelectorAll(".edit-btn"),n=document.querySelectorAll(".circle"),o=document.querySelectorAll(".nav-item");e.forEach((function(e,t){e.setAttribute("data-task",t),e.addEventListener("click",(function(){var t;"delete-btn"==(t=e).classList?t.parentNode.parentNode.remove():"project"==t.parentNode.classList?t.parentNode.remove():console.log("error");let n=e.getAttribute("data-task");l[0].task.splice(n,1)}))})),t.forEach((function(e){e.addEventListener("click",(function(){p.classList.toggle("hidden")}))})),n.forEach((function(e,t){e.setAttribute("data-task",t),e.addEventListener("click",(function(){let t=e.getAttribute("data-task"),n=l[0].task[t];n.toggleCompleted.call(n),s(),a(),k()}))})),o.forEach((function(e,t){e.setAttribute("data-project",t),e.addEventListener("click",(function(){let t=e.getAttribute("data-project");l[t].projectName,function(e,t){c(),i(),d(t)}(0,t),function(e){s(),a(e)}(t),C=t,k()}))}))}m.addEventListener("click",(function(e){u.classList.remove("hidden")})),h.forEach((function(e){e.addEventListener("click",(function(){!function(e){e.parentElement.parentElement.parentElement.parentElement.parentElement.classList.add("hidden")}(e)}))})),L.addEventListener("click",((e,t=l[C])=>{s(),t.addTask(),a(),u.classList.add("hidden"),k()})),E.addEventListener("click",(e=>{l.push(r(document.querySelector("#project-name").value)),c(),i(),k(),console.log("button clicked")}));let C=0;k()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,